name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch: # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run linting
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,.venv
        continue-on-error: true

  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            
            echo "üîÑ Pulling latest changes..."
            git pull origin main
            
            echo "üì¶ Building and starting containers..."
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
            
            echo "üßπ Cleaning up old images..."
            docker image prune -f
            
            echo "‚úÖ Deployment completed successfully!"
            
            echo "üìä Container status:"
            docker-compose ps
      
      - name: Check deployment status
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
            if docker-compose ps | grep -q "Up"; then
              echo "‚úÖ Containers are running"
              exit 0
            else
              echo "‚ùå Containers failed to start"
              docker-compose logs --tail=50
              exit 1
            fi
      
      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Deployment to production completed successfully!"
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Deployment to production failed!"
